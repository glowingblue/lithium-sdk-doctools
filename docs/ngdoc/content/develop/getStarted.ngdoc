@ngdoc overview
@name Get Started
@sortOrder 100
@description

<h1 class = "title">Get Started <a id="top"></a></h1>
<a href="mailto:documentation@lithium.com?Subject=Developer Documentation Feedback" target="_top">Send feedback about this document</a>

* [Prerequisites](#prereq)
* [Installing the SDK and dependencies](#install)

# Prerequisites <a id="prereq"></a>

You need these prerequisites before installing the Community Plugin SDK:
* **Community 15.4 or higher** - Check the
version on the version page located at your-stage-url/status/version (ex: community.lithium.com/status/version). **Note:** If your Community stage
server is running 15.6 or earlier and you download the latest version of the SDK, you might encounter
a "Supported minimum version on server is 15.7" error. See {@link /refer/troubleshoot Troubleshooting}
to resolve.

* **node.js** version 4.8.4 (Mac OSX and CentOS), 6.11.2 (Mac OSX and CentOS), or 8.3.0 (on Mac OSX)

*  **npm** -  Usually, <a href="https://www.npmjs.org/" target="_blank">npm (Node Package Manager)</a> gets bundled with <a href="http://nodejs.org/" target="_blank">the node environment</a>, but verify that you have it.

    * Run `node -v` at the command line to check whether node is installed
    * Run `npm` at the command line to check whether npm is installed

    If you are installing node for the first time, do not install it using `sudo` or in administrator mode. Also, ensure that the directory where npm installs modules to is permissioned so that you do not need to use sudo or administrator mode when you run npm install.
* **rsync** - Many systems come with rsync already installed. However, we recommend running `rsync -v` to verify that it exists. If you don't have it, download it [here](https://rsync.samba.org/?).

* **A Mac 10.8+ or Linux CentOS 6.5+ environment** - Or access to our Windows VM (contact Lithium Support)

* **git** - After you install <a href="https://git-scm.com/" target="_blank">git</a>, run `git` from a new command line to check that it is available

* **A Community accout with the "Use the SDK" permission"**

* **SSL configured for your community** - Contact Lithium Support if you are unsure whether this configuration
set.

* **Whitelisted IPs** - If your stage site has IP restriction turned on, you must whitelist IPs that will interact with the stage server using the SDK. Contact Lithium Support to whitelist IP addresses.


# Installing the SDK and dependencies <a id="install"></a>
We use two npm packages in all of our project repositories: <a href="http://gulpjs.com/" target="_blank">gulp</a> and
<a href="https://www.npmjs.com/package/lithium-sdk" target="_blank">lithium-sdk</a>. Install them by issuing
the following statements in a command line:

```
npm install gulp -g
npm install lithium-sdk -g
```
The `-g` flag denotes the package specified will be installed globally on your system.

Continue with the steps in [Create](#!/develop/create) to create your plugin project repository.

> **Tip:** When you install a node package globally, the package is put in
`usr/local/lib/node_modules` and a symlink is put in `usr/local/bin`. When you run these
commands as yourself (`$USER`), you will not have access to write to these locations, and
you might get a permission error that looks something like this:
`npm ERR! Please try running this command again as root/Administrator.` See the troubleshooting instructions below if you see this error.

> **Note:** You might see warnings generated while installing `lithium-sdk` that look
something like the following. They are a normal part of the installation process and you can ignore them.

```
    10 warnings generated.
    CC(target) Release/obj.target/expat/deps/libexpat/lib/xmlrole.o
    LIBTOOL-STATIC Release/libexpat.a
    CXX(target) Release/obj.target/node_expat/node-expat.o
    SOLINK_MODULE(target) Release/node_expat.node
    SOLINK_MODULE(target) Release/node_expat.node: Finished
```


## Troubleshooting permission errors in Non-Windows environments
If you have permission issues, use change permission for the folders where global packages are being installed so
that $USER can write to those directories and subdirectories.

*For Mac and Linux:*

 * `cd /usr/local/lib/`
 * `sudo chown -R $USER node_modules`
     * Give yourself write access to `/bin`:
 * `sudo chmod -R a+w /usr/bin`


If you are still getting permissions errors, use the following. If you use `sudo` you will have to run SDK scripts in sudo.
```
sudo npm install gulp -g
sudo npm install lithium-sdk -g
```

[Top](#top)
___
