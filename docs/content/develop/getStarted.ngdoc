@ngdoc overview
@name Get Started
@sortOrder 100
@description

# Get Started

## Prerequisites

You need these prerequisites before installing the Lithium-Klout SDK:
* A functional Lithium community on release 15.4 or higher. Check the
version on the version page located at _stage_url_/status/version. **Note:** If your Community stage
server is running 15.6 or earlier and you download the latest version of the SDK, you might encounter
a "Supported minimum version on server is 15.7" error. See {@link /refer/troubleshoot Troubleshooting}
to resolve.

* If your stage site has IP restriction turned on, you must whitelist IPs that will interact with the stage server using the SDK.
Contact Lithium Support to whitelist IP addresses as needed.

* Access to the SDK tab in Studio. This tab generates an
upload token needed to run SDK scripts and deploy your plugin to the stage environment.
Developers in a multi-developer environment share a single token.

* A Mac, Linux, or Windows 7+ environment

* [git](https://git-scm.com/). After you install git, run `git` from a new command line to check that it is available
* [node.js](http://nodejs.org/) and [npm](https://www.npmjs.org/). Our developer
environment runs on top of node.js. When you do local development, it is on a node.js
server that we proxy to a Lithium community instance. Usually, npm (Node Package Manager)
gets bundled with the node environment, but verify that you have it.

    * Run `node -v` at the command line to check whether node is installed
    * Run `npm` at the command line to check whether npm is installed

Windows-specific prerequisites:

* While installing git, select **Use Git from the Windows Command Prompt** on the dialog window **Adjusting your PATH environment**

* [Python v2.7.3](https://www.python.org/downloads/windows/). Be sure that you have a PYTHON environment variable and that it is set to
`drive:\path\to\python.exe`, not to a folder.
    ** After you have installed Python, run `python` from a new command line to check that it is available.

* [Microsoft Visual Studio Community 2013](https://www.visualstudio.com/en-us/news/vs2013-community-vs.aspx). **Note:** Visual Studio
2015 is not supported at this time.

## Installing the SDK and dependencies
We use two npm packages in all of our project repositories: [gulp](http://gulpjs.com/) and
[lithium-sdk](https://www.npmjs.com/package/lithium-sdk). Install them by issueing
the following statements in a command line:

```
npm install gulp -g
npm install lithium-sdk -g
```
The `-g` flag denotes the package specified will be installed globally on your system.

**Tip:** When you install a node package globally, the package is put in
`usr/local/lib/node_modules` and a symlink is put in `usr/local/bin`. When you run these
commands as yourself (`$USER`), you will not have access to write to these locations, and
you might get a permission error that looks something like this:
`npm ERR! Please try running this command again as root/Administrator.`

### Troubleshooting permission errors in Windows environments
If you have permission issues when running the install scripts, run the installation commands in <a href ="https://technet.microsoft.com/en-us/library/Cc947813(v=WS.10).aspx">Administrator mode</a>.

### Troubleshooting permission errors in Non-Windows environments
If you have permission issues, use:
```
sudo npm install gulp -g
sudo npm install lithium-sdk -g
```

If you are still having permission issues, change ownership of where the global
packages are being installed:
 * `cd /usr/local/lib/`
 * `sudo chown -R $USER node_modules`
* Give yourself write access to `/bin`:
 * `sudo chmod -R a+w /usr/bin`

**Note:** You might see warnings generated while installing `lithium-sdk` that look
something like the following. They are a normal part of the installation process and you can ignore them.

```
    10 warnings generated.
    CC(target) Release/obj.target/expat/deps/libexpat/lib/xmlrole.o
    LIBTOOL-STATIC Release/libexpat.a
    CXX(target) Release/obj.target/node_expat/node-expat.o
    SOLINK_MODULE(target) Release/node_expat.node
    SOLINK_MODULE(target) Release/node_expat.node: Finished
```

___
